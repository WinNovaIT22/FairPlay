generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  firstname String
  lastname  String
  email     String   @unique
  city      String   @default("Pori")
  password  String
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
  id        Int      @id @default(autoincrement())
  role      String
  blocked   Boolean  @default(false)
  tasks     UserTasks[]
}

model UserVehicles {
  id              Int       @id @default(autoincrement())
  vehicle         String
  inspected       Boolean   @default(false)
  user_id         Int?
  inspectedImage  String?
  createdAt       DateTime  @default(now())
}

model Tasks {
  id        Int     @id @default(autoincrement())
  task      String?
  taskdesc  String?
  image     Boolean?
  text      Boolean?
  again     Boolean?
  points    Int?
  year      String
  userTasks UserTasks[]
}

model DateRange {
  id        Int      @id @default(autoincrement())
  start     DateTime
  end       DateTime
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model UserTasks {
  id        Int       @id @default(autoincrement())
  userId    Int
  taskId    Int
  tasktitle String?
  taskdesc  String?
  image     Boolean?
  text      Boolean?
  points    Int?
  again     Boolean?
  year      String?
  completed Boolean
  checked   Boolean?
  admintext String?
  user      User      @relation(fields: [userId], references: [id])
  task      Tasks     @relation(fields: [taskId], references: [id])
}

model kaksipyoraiset_data {
  ajoneuvoluokka      String
  merkkiSelvakielinen String
  kaupallinenNimi     String
  id                  Int    @id @default(autoincrement())
}
